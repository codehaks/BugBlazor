
@using BugBlazor.Data
@using BugBlazor.Models

@inject BugBlazor.Data.BugDb _db



<div class="row mb-3">
    <div class="col-6">
        <h3>New Bug</h3>
        <EditForm Model="@Bug" OnValidSubmit="@AddBug">

            <InputText id="name" @bind-Value="@Bug.Name" class="form-control" />
            <br />
            <InputTextArea @bind-Value="@Bug.Description" class="form-control"></InputTextArea>
            <br />
            <button type="submit" class="btn btn-primary btn-lg">Add</button>
        </EditForm>
    </div>
</div>


<table class="table table-hover">
    <thead>
        <tr>
            <th>#</th>
            <th>Id</th>
            <th>Name</th>
            <th>Desc</th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Bugs.Count; i++)
        {
            var bug = Bugs[i];
            <tr>

                <td>@(i + 1)</td>
                <td>@bug.Id</td>
                <td>@bug.Name</td>
                <td>@bug.Description</td>

                <td>
                    <a class="btn btn-default">Details</a>
                    <a class="btn btn-danger" @onclick="()=>RemoveBug(bug)">Delete</a>
                    <a class="btn btn-primary">Edit</a>
                </td>
            </tr>
        }

    </tbody>
</table>

@code{
    private Bug Bug = new Bug();
    public int counter;

    public IList<BugBlazor.Models.Bug> Bugs { get; set; }

    protected override void OnInitialized()
    {
        counter = 1;
        Bugs = _db.Bugs.ToList();
    }

    private void AddBug()
    {
        _db.Bugs.Add(Bug);
        _db.SaveChanges();

        Bugs.Add(Bug);
        Bug = new Bug();
    }

    private void RemoveBug(Bug bug)
    {
        _db.Bugs.Remove(bug);
        _db.SaveChanges();

        Bugs.Remove(bug);
    }


}